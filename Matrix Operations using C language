//matrix operations using c
#include<stdio.h>
#include<stdlib.h>
void input(int A[10][10],int m,int n)
{
	for(int i=0;i<m;i++)
	{
		for(int j=0;j<n;j++)
		{
			printf("Enter value of A[%d][%d]:",i,j);
			scanf("%d",&A[i][j]);
		}
	}
}
void display(int A[10][10],int m,int n)
{
	for(int i=0;i<m;i++)
	{
		for(int j=0;j<n;j++)
		{
			printf("%d\t",A[i][j]);
		}
		printf("\n");
	}
}
void add(int A[10][10],int B[10][10],int C[10][10],int m, int n)
{
	for(int i=0;i<m;i++)
	{
		for(int j=0;j<n;j++)
		{
			C[i][j]=A[i][j]+B[i][j];
		}
	}
}
void transpose(int A[10][10],int B[10][10],int m,int n)
{
	for(int i=0;i<m;i++)
	{
		for(int j=0;j<n;j++)
		{
			B[i][j]=A[j][i];
		}
	}
}
void multiply(int A[10][10],int B[10][10],int C[10][10],int m1,int n2,int n1)
{
	for(int i=0;i<m1;i++)
	{
		for(int j=0;j<n2;j++)
		{
			C[i][j]=0;
			for(int k=0;k<n1;k++)
			{
				C[i][j]+=A[i][k]*B[k][j];
			}
		}
	}
}
int main()
{
	int A[10][10],B[10][10],C[10][10],D[10][10],E[10][10],F[10][10],m1,n1,m2,n2,ch;
	printf("For matrix A:\n");
	printf("Enter row:");
	scanf("%d",&m1);
	printf("Enter column:");
	scanf("%d",&n1);
	input(A,m1,n1);
	printf("For matrix B:\n");
	printf("Enter row:");
	scanf("%d",&m2);
	printf("Enter column:");
	scanf("%d",&n2);
	input(B,m2,n2);
	int b=0;
	while(b==0)
	{
	printf("1.Add\n");
	printf("2.Multiply\n");
	printf("3.Transpose\n");
	printf("Enter choice from above:");
	scanf("%d",&ch);
	switch(ch)
	{
	case 1:
		if(m1==m2 && n1==n2)
		{
			add(A,B,C,m1,n1);
			display(C,m1,n1);
		}
		else
		printf("Invalid!! can't be added!");
		break;
	case 2:
		if(n1==m2)
		{
			multiply(A,B,D,m1,n2,n1);
			display(D,m1,n2);
		}
		else

			printf("Error!! Can't be multiplied!!");

		break;
	case 3:
		printf("Transpose of matrix A is:\n");
		transpose(A,E,m1,n1);
		display(E,m1,n1);
		printf("Transpose of matrix B is:\n");
		transpose(B,F,m2,n2);
		display(F,m2,n2);
		break;
	default:
		exit(0);
	}
	int a;
	printf("Press 1 to continue and 0 to exit:");
	scanf("%d",&a);
	if(a==0)
		b=1;
	else
		b=0;
		printf("Exiting from program!!!!!\n");
		printf("Thanks!\n");
	}
	return 0;
}
